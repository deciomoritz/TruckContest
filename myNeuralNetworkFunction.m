function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-Jul-2015 12:06:48.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 3xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [0.0228426395939086;-0.35;0];
x1_step1_gain = [2.21348314606742;1.536;0.0058469402450652];
x1_step1_ymin = -1;

% Layer 1
b1 = [1.609509462936940194;2.5577300479618365614;-1.7309949675972227112;-0.9372924090308372147;-2.0801697251726025684;0.65503974515115437338;0.65803288580908991801;1.6136208234223003988;-2.3182636675640932999;3.1400629107295543463];
IW1_1 = [-3.5980171547639385743 -0.64877737811503388698 -1.6036854859991054312;-3.0513406274629106818 0.2777396498751790177 1.9973664718130914597;0.53256897626478083563 -2.5413792699495520999 1.7644350307363987351;-1.0760937431678831988 2.1193158976241557312 1.3639704809227826132;0.43236457774990455505 -1.1848336190466608464 -2.8342610337148803623;0.88999166507864702069 -0.13795750898475905855 -3.2539501579394292108;0.51117555276505466377 1.8769484189432328325 -2.4080061741851936929;1.7286027190823434196 -1.2431201120331412113 2.063068722421312895;-0.90380834402703813524 -1.9815220691103689887 2.1728123878591207863;2.4344652778405158067 0.40764187429571541177 1.6153730185003292164];

% Layer 2
b2 = 0.49289677196268549819;
LW2_1 = [-0.72833839850090564827 0.56554205739380347673 -0.39611658275499617154 -1.0954951881370553757 1.2218782147730971044 -1.5503115265552298574 0.75692670452532972991 -1.6371075754995851881 0.20965449067056776689 0.98698372750964613598];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 1.01346439154718;
y1_step1_xoffset = -0.974428979529096;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
